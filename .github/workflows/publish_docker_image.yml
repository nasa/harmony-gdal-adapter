name: Publish Harmony GDAL Adapter Docker image

on:
  push:
    branches: [ main ]
    paths: version.txt

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  run_tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.8 ]

    steps:
      - name: Checkout harmony-gdal-adapter repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build test image
        run: ./bin/build-test

      - name: Run test image
        run: ./bin/run-test

      - name: Archive test results
        uses: actions/upload-artifact@v2
        with:
          name: Test results for Python ${{ matrix.python-version }}
          path: test-reports/

      - name: Archive coverage report
        uses: actions/upload-artifact@v2
        with:
          name: Coverage report for Python ${{ matrix.python-version }}
          path: coverage/*

  build_and_publish_image:
    needs: run_tests
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

    steps:
      - name: Checkout harmony-gdal-adapter repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Extract semantic version number
        run: echo "semantic_version=$(cat version.txt)" >> $GITHUB_ENV

      - name: Log-in to ghcr.io registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Add tags to the Docker image
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.semantic_version }}

      - name: Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/service.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
